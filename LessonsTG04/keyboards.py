from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


keyboard = [
        [KeyboardButton(text='–ü—Ä–∏–≤–µ—Ç üëã'), KeyboardButton(text='–ö–∞–∫ –¥–µ–ª–∞? üòä')],
        [KeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è')],
        [KeyboardButton(text='–ü–æ–∫–∞ ‚úãüèº')]
    ]


kbd_reply_markup = ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–æ–≤–æ—Å—Ç–∏", url="https://dzen.ru/news?issue_tld=ru&itemId=464&ysclid=m7nd9633zp36480194")],
    [InlineKeyboardButton(text="–ú—É–∑—ã–∫–∞", url="https://www.youtube.com/watch?v=oMd3cpr2cZk&list=RDQMk39cxbSYF6Y&start_radio=1")],
    [InlineKeyboardButton(text="–í–∏–¥–µ–æ", url="https://www.youtube.com/watch?v=glLZz-8Ud2A&pp=ygUd0YDQtdGG0LXQv9GC0Ysg0YHQsNC70LDRgtC-0LI%3D")],
])



salads_data = {
    'cucumbers': ('–û–≥—É—Ä—Ü—ã üëæ', ['–°–∞–ª–∞—Ç —Å –æ–≥—É—Ä—Ü–∞–º–∏ –∏ –∑–µ–ª–µ–Ω—å—é üåø', '–û–≥—É—Ä–µ—á–Ω—ã–π —Å–∞–ª–∞—Ç —Å –ª—É–∫–æ–º üßÖ']),
    'tomatoes': ('–ü–æ–º–∏–¥–æ—Ä—ã üçÖ', ['–°–∞–ª–∞—Ç –∏–∑ –ø–æ–º–∏–¥–æ—Ä–æ–≤ üçÉ', '–ü–æ–º–∏–¥–æ—Ä—ã —Å —Å—ã—Ä–æ–º üßÄ']),
    'carrots': ('–ú–æ—Ä–∫–æ–≤—å ü§ë', ['–ú–æ—Ä–∫–æ–≤–Ω—ã–π —Å–∞–ª–∞—Ç —Å —á–µ—Å–Ω–æ–∫–æ–º üßÑ', '–ú–æ—Ä–∫–æ–≤—å –ø–æ-–∫–æ—Ä–µ–π—Å–∫–∏ ü•¢']),
    'peppers': ('–ü–µ—Ä–µ—Ü üå∂', ['–°–∞–ª–∞—Ç –∏–∑ –ø–µ—Ä—Ü–∞ –∏ –±–∞–∫–ª–∞–∂–∞–Ω–æ–≤ üçÜ', '–ü–µ—Ä–µ—Ü —Ñ–∞—Ä—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π üçΩ']),
    'mayonnaise': ('–ú–∞–π–æ–Ω–µ–∑ ‚ò†Ô∏è', ['–°–∞–ª–∞—Ç –û–ª–∏–≤—å–µ ü•ó', '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å üçû'])
}


def get_vegetable_name(key):
    name, _ = salads_data[key]
    return name


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
def create_vegetable_keyboard():
    builder = InlineKeyboardBuilder()
    for key, (name, _) in salads_data.items():
        builder.button(text=name, callback_data=f"vegetable:{key}")
    builder.adjust(1)
    return builder.as_markup()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è
def create_salad_keyboard(key):
    _, salads = salads_data[key]
    builder = InlineKeyboardBuilder()
    for salad in salads:
        builder.button(text=salad, callback_data=f"salad:{salad}")
    builder.button(text="<< –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")
    builder.adjust(1)
    return builder.as_markup()

