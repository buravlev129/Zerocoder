
Задание 1: Базовая обработка исключений
Напиши код на Python для следующей задачи:
Напиши функцию safe_divide, которая принимает два аргумента: a и b.
Функция должна пытаться делить a на b и возвращать результат. 
Если произойдет ошибка деления на ноль (ZeroDivisionError), функция должна возвращать None вместо возникновения исключения. 
Продемонстрируй работу функции на нескольких примерах, включая деление на ноль.


Задание 2: Обработка множества видов исключений
Напиши код на Python для следующей задачи:
Напиши программу, которая запрашивает у пользователя ввести целое число, а затем пытается преобразовать введенное значение в целочисленный тип. 
Используй блок try-except, чтобы корректно обработать возможные исключения, которые могут возникнуть в этом процессе, включая ValueError. 
В случае ValueError выведи сообщение "Невозможно преобразовать введенное значение в целое число".
Программа должна просить пользователя попробовать ввести число еще раз. 
Убедись, что программа корректно работает с корректным вводом, и продемонстрируй ее поведение на некорректном вводе.


Задание 3: Обработка исключений прошлых программ
Возьми одну из программ, которую мы писали на прошлых уроках, 
продумай, какие ошибки в программе могут появляться (можно прям специально пробовать ее ломать) 
и дополни код конструкцией try-except для обработки выявленных исключений.

*****************************

Ниже приведена программа на Python:
def safe_divide(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return None

Продумай, какие ошибки в программе могут появляться.
Дополни код конструкцией try-except для обработки выявленных исключений.
Приведи тестовые примеры с разными ошибками.


Напиши код на Python для следующей задачи:
Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых.
Каждый год размер его вклада увеличивается на 10%. 
Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут начислены проценты.
Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.
--







